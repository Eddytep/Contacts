CREATE TABLE CONTACTS.RECORDS 
(
  ID NUMBER NOT NULL PRIMARY KEY, 
  TIME_CREATED TIMESTAMP(6) NOT NULL,
  TIME_LAST_EDIT TIMESTAMP(6) NOT NULL,
  TYPE NUMBER NOT NULL REFERENCES CONTACTS.TYPES(TYPE_ID),
  NAME VARCHAR2(20) NOT NULL, 
  SURNAME VARCHAR2(20) DEFAULT '', 
  PHONE_NUMBER VARCHAR2(20) DEFAULT '', 
  ADDRESS VARCHAR2(20),
  BIRTHDAY DATE, 
  GENDER VARCHAR2(20)
);

CREATE TABLE CONTACTS.TYPES
(
    TYPE_ID NUMBER NOT NULL PRIMARY KEY,
    TYPE VARCHAR2(15) NOT NULL
);

CREATE SEQUENCE CONTACTS.RECORDS_SEQ INCREMENT BY 1 START WITH 1 MINVALUE 1;
CREATE SEQUENCE CONTACTS.TYPES_SEQ  INCREMENT BY 1 START WITH 1 MINVALUE 1;

CREATE OR REPLACE TRIGGER CONTACTS.INSERT_IN_CONTACTS_TRG 
BEFORE INSERT ON CONTACTS.RECORDS
FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT RECORDS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;
  IF :NEW.TIME_CREATED IS NULL THEN
    SELECT SYSTIMESTAMP INTO :NEW.TIME_CREATED FROM DUAL;
  END IF;
  IF :NEW.TIME_LAST_EDIT IS NULL THEN
   SELECT SYSTIMESTAMP INTO :NEW.TIME_LAST_EDIT FROM DUAL;
  END IF; 
END;

CREATE OR REPLACE TRIGGER CONTACTS.UPDATE_TIME_LAST_EDIT_TRG 
BEFORE UPDATE ON CONTACTS.RECORDS
FOR EACH ROW
BEGIN
    SELECT SYSTIMESTAMP INTO :NEW.TIME_LAST_EDIT FROM DUAL;
END;

CREATE OR REPLACE TRIGGER CONTACTS.INSERT_IN_TYPE_TRG 
BEFORE INSERT ON CONTACTS.TYPES
FOR EACH ROW
BEGIN
  IF :NEW.TYPE_ID IS NULL THEN
    SELECT TYPES_SEQ.NEXTVAL INTO :NEW.TYPE_ID FROM DUAL;
  END IF;
END;

INSERT INTO CONTACTS.TYPES(TYPE_ID, TYPE) VALUES(1, 'PERSON');
INSERT INTO CONTACTS.TYPES(TYPE_ID, TYPE) VALUES(2, 'ORGANIZATION');